# Generated from Arara.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing import TextIO


def serializedATN():
    return [
        4,0,22,168,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,
        3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,
        7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
        9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,
        11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,
        12,1,13,1,13,1,14,1,14,5,14,119,8,14,10,14,12,14,122,9,14,1,15,4,
        15,125,8,15,11,15,12,15,126,1,16,1,16,1,16,1,16,5,16,133,8,16,10,
        16,12,16,136,9,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,19,1,
        19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,154,8,19,1,20,1,20,1,20,1,
        20,3,20,160,8,20,1,21,4,21,163,8,21,11,21,12,21,164,1,21,1,21,0,
        0,22,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,1,0,7,3,
        0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,
        34,34,92,92,2,0,43,43,45,45,2,0,42,42,47,47,3,0,9,10,13,13,32,32,
        178,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        0,41,1,0,0,0,0,43,1,0,0,0,1,45,1,0,0,0,3,50,1,0,0,0,5,52,1,0,0,0,
        7,54,1,0,0,0,9,56,1,0,0,0,11,64,1,0,0,0,13,67,1,0,0,0,15,70,1,0,
        0,0,17,76,1,0,0,0,19,82,1,0,0,0,21,88,1,0,0,0,23,97,1,0,0,0,25,102,
        1,0,0,0,27,114,1,0,0,0,29,116,1,0,0,0,31,124,1,0,0,0,33,128,1,0,
        0,0,35,139,1,0,0,0,37,141,1,0,0,0,39,153,1,0,0,0,41,159,1,0,0,0,
        43,162,1,0,0,0,45,46,5,108,0,0,46,47,5,101,0,0,47,48,5,105,0,0,48,
        49,5,97,0,0,49,2,1,0,0,0,50,51,5,40,0,0,51,4,1,0,0,0,52,53,5,41,
        0,0,53,6,1,0,0,0,54,55,5,59,0,0,55,8,1,0,0,0,56,57,5,101,0,0,57,
        58,5,115,0,0,58,59,5,99,0,0,59,60,5,114,0,0,60,61,5,101,0,0,61,62,
        5,118,0,0,62,63,5,97,0,0,63,10,1,0,0,0,64,65,5,60,0,0,65,66,5,45,
        0,0,66,12,1,0,0,0,67,68,5,115,0,0,68,69,5,101,0,0,69,14,1,0,0,0,
        70,71,5,101,0,0,71,72,5,110,0,0,72,73,5,116,0,0,73,74,5,97,0,0,74,
        75,5,111,0,0,75,16,1,0,0,0,76,77,5,115,0,0,77,78,5,101,0,0,78,79,
        5,110,0,0,79,80,5,97,0,0,80,81,5,111,0,0,81,18,1,0,0,0,82,83,5,102,
        0,0,83,84,5,105,0,0,84,85,5,109,0,0,85,86,5,115,0,0,86,87,5,101,
        0,0,87,20,1,0,0,0,88,89,5,101,0,0,89,90,5,110,0,0,90,91,5,113,0,
        0,91,92,5,117,0,0,92,93,5,97,0,0,93,94,5,110,0,0,94,95,5,116,0,0,
        95,96,5,111,0,0,96,22,1,0,0,0,97,98,5,102,0,0,98,99,5,97,0,0,99,
        100,5,99,0,0,100,101,5,97,0,0,101,24,1,0,0,0,102,103,5,102,0,0,103,
        104,5,105,0,0,104,105,5,109,0,0,105,106,5,101,0,0,106,107,5,110,
        0,0,107,108,5,113,0,0,108,109,5,117,0,0,109,110,5,97,0,0,110,111,
        5,110,0,0,111,112,5,116,0,0,112,113,5,111,0,0,113,26,1,0,0,0,114,
        115,5,33,0,0,115,28,1,0,0,0,116,120,7,0,0,0,117,119,7,1,0,0,118,
        117,1,0,0,0,119,122,1,0,0,0,120,118,1,0,0,0,120,121,1,0,0,0,121,
        30,1,0,0,0,122,120,1,0,0,0,123,125,7,2,0,0,124,123,1,0,0,0,125,126,
        1,0,0,0,126,124,1,0,0,0,126,127,1,0,0,0,127,32,1,0,0,0,128,134,5,
        34,0,0,129,133,8,3,0,0,130,131,5,92,0,0,131,133,9,0,0,0,132,129,
        1,0,0,0,132,130,1,0,0,0,133,136,1,0,0,0,134,132,1,0,0,0,134,135,
        1,0,0,0,135,137,1,0,0,0,136,134,1,0,0,0,137,138,5,34,0,0,138,34,
        1,0,0,0,139,140,7,4,0,0,140,36,1,0,0,0,141,142,7,5,0,0,142,38,1,
        0,0,0,143,144,5,61,0,0,144,154,5,61,0,0,145,146,5,33,0,0,146,154,
        5,61,0,0,147,154,5,60,0,0,148,149,5,60,0,0,149,154,5,61,0,0,150,
        154,5,62,0,0,151,152,5,62,0,0,152,154,5,61,0,0,153,143,1,0,0,0,153,
        145,1,0,0,0,153,147,1,0,0,0,153,148,1,0,0,0,153,150,1,0,0,0,153,
        151,1,0,0,0,154,40,1,0,0,0,155,156,5,38,0,0,156,160,5,38,0,0,157,
        158,5,124,0,0,158,160,5,124,0,0,159,155,1,0,0,0,159,157,1,0,0,0,
        160,42,1,0,0,0,161,163,7,6,0,0,162,161,1,0,0,0,163,164,1,0,0,0,164,
        162,1,0,0,0,164,165,1,0,0,0,165,166,1,0,0,0,166,167,6,21,0,0,167,
        44,1,0,0,0,8,0,120,126,132,134,153,159,164,1,6,0,0
    ]

class AraraLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    ID = 15
    INT = 16
    STRING = 17
    OPSUM = 18
    OPMULT = 19
    OPCOMP = 20
    OPLOG = 21
    WS = 22

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'leia'", "'('", "')'", "';'", "'escreva'", "'<-'", "'se'", 
            "'entao'", "'senao'", "'fimse'", "'enquanto'", "'faca'", "'fimenquanto'", 
            "'!'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "STRING", "OPSUM", "OPMULT", "OPCOMP", "OPLOG", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "ID", "INT", "STRING", "OPSUM", "OPMULT", "OPCOMP", "OPLOG", 
                  "WS" ]

    grammarFileName = "Arara.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


